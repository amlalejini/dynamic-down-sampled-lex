#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########

#SBATCH --time=17:00:00               # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-500                 # number of jobs being created, each with its array id
#SBATCH --mem=20G                     # memory required per node - amount of memory (in gigs)
#SBATCH --job-name ml-sex             # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab             # research group account being used

##################################
# Setup relevant directories
##################################
DATA_DIR=/mnt/ls15/scratch/users/herna383/IEEE-EC-2021/MULAMBDA

##################################
# Setup relevant directories
# Previously used ones will be commented out
##################################
REPLICATION_OFFSET=0

##################################
# Setup random seed info
##################################
PROBLEM_SEED_OFFSET=11000
SEED=$((SLURM_ARRAY_TASK_ID + PROBLEM_SEED_OFFSET + REPLICATION_OFFSET))

##################################
# Setup tournament size
##################################
MU__1=1
MU__2=2
MU__4=4
MU__8=8
MU__16=16
MU__32=32
MU__64=64
MU__128=128
MU__256=256
MU__512=512

##################################
# Folder naming
##################################
DIAGNOSTIC_1=EXPLOITATION
DIAGNOSTIC_2=STRUCTEXPLOITATION
DIAGNOSTIC_3=CONTRAECOLOGY
DIAGNOSTIC_4=EXPLORATION

##################################
# Setup selection scheme
##################################
MULAMBDA=0
TOURNAMENT=1
FITSHARING=2
NOVELTY=3
LEXICASE=4

##################################
# Setup diagnostic
##################################
EXPLOITATION=0
STRUCTURED_EXPLOITATION=1
CONTRADICTORY_ECOLOGY=2
EXPLORATION=3

###### Treatments #######
TREATMENT__MU_1__MIN=1
TREATMENT__MU_1__MAX=50

TREATMENT__MU_2__MIN=51
TREATMENT__MU_2__MAX=100

TREATMENT__MU_4__MIN=101
TREATMENT__MU_4__MAX=150

TREATMENT__MU_8__MIN=151
TREATMENT__MU_8__MAX=200

TREATMENT__MU_16__MIN=201
TREATMENT__MU_16__MAX=250

TREATMENT__MU_32__MIN=251
TREATMENT__MU_32__MAX=300

TREATMENT__MU_64__MIN=301
TREATMENT__MU_64__MAX=350

TREATMENT__MU_128__MIN=351
TREATMENT__MU_128__MAX=400

TREATMENT__MU_256__MIN=401
TREATMENT__MU_256__MAX=450

TREATMENT__MU_512__MIN=451
TREATMENT__MU_512__MAX=500

##################################
# Config file parameters
##################################
OBJECTIVE_CNT=100
ACCURACY=.99
GENERATIONS=50000
ACCURACY_DIR=99

####################################################################

if [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MU_1__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MU_1__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_2}__MU_${MU__1}__SEED_${SEED}
  MU=${MU__1}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MU_2__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MU_2__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_2}__MU_${MU__2}__SEED_${SEED}
  MU=${MU__2}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MU_4__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MU_4__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_2}__MU_${MU__4}__SEED_${SEED}
  MU=${MU__4}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MU_8__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MU_8__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_2}__MU_${MU__8}__SEED_${SEED}
  MU=${MU__8}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MU_16__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MU_16__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_2}__MU_${MU__16}__SEED_${SEED}
  MU=${MU__16}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MU_32__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MU_32__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_2}__MU_${MU__32}__SEED_${SEED}
  MU=${MU__32}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MU_64__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MU_64__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_2}__MU_${MU__64}__SEED_${SEED}
  MU=${MU__64}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MU_128__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MU_128__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_2}__MU_${MU__128}__SEED_${SEED}
  MU=${MU__128}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MU_256__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MU_256__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_2}__MU_${MU__256}__SEED_${SEED}
  MU=${MU__256}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TREATMENT__MU_512__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TREATMENT__MU_512__MAX} ] ; then
  NAME=DIA_${DIAGNOSTIC_2}__MU_${MU__512}__SEED_${SEED}
  MU=${MU__512}

else
  echo "${SEED} from ${PROBLEM} failed to launch" >> /mnt/ls15/scratch/users/herna383/ps-coh-failtolaunch.txt
fi

####################################################################

RUN_DIR=${DATA_DIR}/TRT_${OBJECTIVE_CNT}__ACC_${ACCURACY_DIR}__GEN_${GENERATIONS}/${NAME}/

# make a run directory
mkdir -p ${RUN_DIR}

echo "../../../Experiment/dia_world -SEED ${SEED} -DIAGNOSTIC ${STRUCTURED_EXPLOITATION} -SELECTION ${MULAMBDA} -OUTPUT_DIR ${RUN_DIR} -MU ${MU} -OBJECTIVE_CNT ${OBJECTIVE_CNT} -ACCURACY ${ACCURACY} -MAX_GENS ${GENERATIONS} > run.log" > ./cmd-coh.txt

../../../Experiment/dia_world -SEED ${SEED} -DIAGNOSTIC ${STRUCTURED_EXPLOITATION} -SELECTION ${MULAMBDA} -OUTPUT_DIR ${RUN_DIR} -MU ${MU} -OBJECTIVE_CNT ${OBJECTIVE_CNT} -ACCURACY ${ACCURACY} -MAX_GENS ${GENERATIONS}
